<div class="uk-section uk-section-muted" id="documentation">
    <div class="uk-container">
        <h1 class="uk-heading-divider uk-text-primary"><i class="fa fa-book"></i> Documentation</h1>

        {# Installation #}
        <section id="installation">
            <h2 class="uk-heading">Installation</h2>

            <div class="content uk-margin-medium-left">
                <p>For starting your own mosaic project, first clone this repository to your device.</p>

                <pre data-title="BASH"><code class="language-bash">
                    git clone https://github.com/tracingpaper/mosaic.git PROJECT_NAME
                </code></pre>

                <p>Now install <strong>gulp</strong> globally (If not already installed)</p>

                <pre data-title="BASH"><code class="language-bash">
                    npm install gulp -g
                </code></pre>

                <p>Now install the required node packages to start building.</p>

                <pre data-title="BASH"><code class="language-bash">
                    npm install
                </code></pre>

                <p>You are all set and ready to get started!</p>
            </div>
        </section>
        {# /Installation #}

        {# Prerequisites #}
        <section id="prerequisites">
            <h2 class="uk-heading">Prerequisites</h2>

            <div class="content uk-margin-medium-left">
                <p>To use this framework you should know the basics of <strong>Nunjucks</strong>, <strong>SCSS</strong> and <strong>UIKit</strong>. Also you should be a little familiar with <b>node.js</b> and <b>npm</b>.</p>

                <ul class="uk-list uk-list-bullet">
                    <li><a target="_blank" href="https://mozilla.github.io/nunjucks/getting-started.html" class="uk-link-text">Read Nunjucks Docs</a></li>
                    <li><a target="_blank" href="https://sass-lang.com/guide" class="uk-link-text">Read Sass Docs</a></li>
                    <li><a target="_blank" href="https://getuikit.com/docs" class="uk-link-text">Read UIKit Docs</a></li>
                </ul>
            </div>

        </section>
        {# /Prerequisites #}

        {# Getting Started #}
        <section id="getting-started">
            <h2 class="uk-heading">Getting Started</h2>

                <div class="content uk-margin-medium-left">
                    <p>
                        After installation you will have a lot of files in your downloaded to your project folder 
                        <i>(<a href="#directory-structure" uk-scroll="offset:80">Learn more about the Directory Structure</a>)</i>.
                    </p>

                    <p>We have set up everything for you to start building sites with nunjucks and sass. Run the build command to compile all the nunjucks and sass.</p>

                    <pre data-title="BASH"><code class="language-bash">gulp build</code></pre>

                    <p>Start a local live-server to view the result <i>(The live server will run at port 4000).</i></p>

                    <pre data-title="BASH"><code class="language-bash">gulp serve</code></pre>

                    <p>Visit <a target="_blank" href="http://localhost:4000/">localhost:4000</a> to see the result.</p>
                </div>
        </section>
        {# /Getting Started #}

        {# Directory Structure #}
        <section id="directory-structure">
            <h2 class="uk-heading">Directory Structure</h2>

            <div class="content uk-margin-medium-left">
                <ul class="uk-list uk-list-files">
                    <li class="folder parent">
                        <span class="title">app</span>
                        <ul class="uk-list uk-list-files">
                            <li class="folder parent">
                                <span class="title">dist</span>
                                <ul class="uk-list uk-list-files">
                                    <li class="folder">assets</li>
                                    <li class="folder">css</li>
                                    <li class="folder">js</li>
                                </ul>
                            </li><!-- /dist -->
                            <li class="folder parent">
                                <span class="title">src</span>
                                <ul class="uk-list uk-list-files">
                                    <li class="folder">js</li>
                                    <li class="folder">scss</li>
                                    <li class="folder parent">
                                        <span class="title">views</span>
                                        <ul class="uk-list uk-list-files">
                                            <li class="folder">pages</li>
                                            <li class="folder parent">
                                                <span class="title">templates</span>
                                                <ul class="uk-list uk-list-files">
                                                    <li class="folder">layouts</li>
                                                    <li class="folder">macros</li>
                                                    <li class="folder">partials</li>
                                                </ul>
                                            </li><!-- templates -->
                                        </ul>
                                    </li><!-- views -->
                                </ul>
                            </li><!-- src -->
                            <li class="folder">config</li>
                        </ul>
                    </li><!-- app -->
                    <li class="file gulp">gulpfile.js</li>
                    <li class="file">.babelrc</li>
                    <li class="file node">package.json</li>
                    <li class="file">mosaic.json</li>
                </ul>

                <dl class="uk-description-list uk-description-list-divider">

                    <dt><i class="fab fa-gulp uk-text-danger"></i> gulpfile.js</dt>
                    <dd>This file contains the logic for bundling the project. <em>It is recommend not to edit this file unless you are certain about what you are doing</em></dd>

                    <dt><i class="fas fa-folder uk-text-primary"></i> app</dt>
                    <dd>This directory manages all the source and compiled files.</dd>

                    <dt><i class="fas fa-folder uk-text-primary"></i> dist</dt>
                    <dd>
                        Contains all the compiled files and assets. This is the only directory needed for hosting the website
                        <ul class="uk-list uk-list-files uk-margin-small-top uk-margin-small-left">
                            <li class="folder">
                                <b>assets:</b> 
                                It is used to store any external assets like images required for building the website.
                            </li>
                            <li class="folder">
                                <b>css:</b>
                                It contains the compiled css file (app.css).
                            </li>
                            <li class="folder">
                                <b>js:</b>
                                It contains the compiled js file (app.js).
                            </li>
                            <li class="file">
                                <b>**/*.html:</b>
                                Compiled html files (index.html).
                            </li>
                        </ul>
                    </dd>

                    <dt><i class="fas fa-folder uk-text-primary"></i> src</dt>
                    <dd>
                        Contains all the source files. We only use this directory for coding. On running build command all files in src are compiled to dist.
                        <ul class="uk-list uk-list-files uk-margin-small-top uk-margin-small-left">
                            <li class="folder">
                                <b>js:</b> 
                                Space for your own javascript code. (Note: only the js files imported to app.js gets compiled)
                            </li>
                            <li class="folder">
                                <b>scss:</b>
                                Includes scss files needed for styling the website. (Note: only the scss files imported to app.scss gets compiled)
                            </li>
                            <li class="folder parent">
                                <b class="title">views:</b>
                                <span>Includes all the nunjucks (.njk) files. Only the files in pages directory gets compiled to final .html files. The files in templates directory are used for templating in nunjucks.</span>
                            </li>
                        </ul>

                        <h4><i class="fas fa-folder uk-text-primary"></i> views/templates</h4>
                        <div class="uk-margin-small-left">
                            <p>It includes 3 sub-directories:</p>
                            <ul class="uk-list uk-list-files">
                                <li class="folder">layouts: Nunjucks Layouts</li>
                                <li class="folder">macros: Nunjucks Macros</li>
                                <li class="folder">partials: Nunjucks Partials</li>
                            </ul>
                            
                            <i><i class="fas fa-sticky-note"></i> Note: To know more about these refer
                            <a target="_blank" href="https://mozilla.github.io/nunjucks/getting-started.html" class="uk-link">Nunjucks Documentation</a>.</i>
                        </div>
                    </dd>

                    <dt><i class="fas fa-file-code uk-text-warning"></i>config</dt>
                    <dd>
                        <p>Contains configuration information for the project. There are two files <i>app.json</i> and <i>data.json</i>.</p>
                        <p>Data in app.json can be accessed via global <i>'app'</i> object and that in data.json via <i>'data'</i> object.

                        <h4>Example:</h4>
                        <h5>config/app.json</h5>
                        <pre data-title="JSON" class="line-numbers"><code class="language-json">
                            {
                                "title": "Mosaic",
                            }
                        </code></pre>

                    <h5>app.layout.njk</h5>

                    <pre data-title="HTML" class="line-numbers"><code class="language-xml">
                        &lt;!Doctype HTML&gt;
                        &lt;html&gt;
                            &lt;head&gt;
                                ...
                                &lt;title&gt;{% raw %} {{app.title}} {% endraw %}&lt;/title&gt; &lt;!-- Compiled to &lt;title&gt;Mosaic&lt;/title&gt; --&gt;
                                ...
                            &lt;/head&gt;
                            ...
                        &lt;/html&gt;
                    </code></pre>

                    </dd>

                    <dt><i class="fas fa-file-code uk-text-warning"></i> .babelrc</dt>
                    <dd>
                        Babel configuration file.
                        This file can be used to include plugins and presets into babel.
                        <i>(Read more on <a target="_blank" href="https://babeljs.io/">Babel</a> )</i>
                    </dd>

                    <dt><i class="fas fa-file-code uk-text-warning"></i> mosaic.json</dt>
                    <dd>
                        Mosaic configuration file.
                        <i>(Limited configuration options available for now)</i>
                    </dd>

                    <dt><i class="fab fa-node-js uk-text-success"></i> package.json</dt>
                    <dd>
                        Node JS package description file
                    </dd>
                </dl>


            </div>
        </section>
        {# /Directory Structure #}

        {# Using UIKit #}
        <section id="using-uikit">
            <h2 class="uk-heading">Using UIKit</h2>
            <div class="content uk-margin-medium-left">
                <p>
                    UIKit is already setup for you to use and customize.
                    Use <b>_variables.scss</b> and <b>_hooks.scss</b> for customizing the UIKit styles.
                    Make sure these files are imported in <b>app.scss</b>.
                </p>
                <p>
                    Read <a target="_blank" href="https://getuikit.com/docs/sass">UIKit Docs on Sass</a> for more info.
                </p>

                <p>
                    <i>(Note: The _variables.scss only shows a few variables in use.
                    These are all it needs for small customizations to the site.
                    A complete list of all variables can be found at 
                    <a target="_blank" href="https://github.com/uikit/uikit/blob/develop/src/scss/variables.scss">
                        https://github.com/uikit/uikit/blob/develop/src/scss/variables.scss
                    </a>)</i>
                </p>

                <p>UIKit variable is available globally for access. You can use it for UIKit's js functionality.</p>

                <h4>Example:</h4>

                <pre data-title="JS"><code class="language-js">
                    //show UIKit notification
                    UIkit.notification('Hello world.');
                </code></pre>
            </div>

        </section>
        {# /Using UIKit #}

        {# Using Babel #}
        <section id="using-babel">
            <h2 class="uk-heading">Using Babel</h2>
            <div class="content uk-margin-medium-left">
                <p>
                    Mosaic uses Babel for transpiling es6 syntax.
                    Babel plugins can be included to the project by installing it via npm and specifying it in <b>.babelrc</b>.
                </p>

                <h4>Example:</h4>
                <p>This page used <b>babel-plugin-prismjs</b> for syntax highlighting. First we install it via npm.</p>

                <pre data-title="BASH"><code class="language-bash">npm install --save-dev babel-plugin-prismjs</code></pre>

                <p>Now configure it in <b>.babelrc</b></p>

                <pre data-title="JSON" class="line-numbers"><code class="language-json">
                    {
                        "presets": ["@babel/preset-env"],
                        "plugins": [
                            [
                                "prismjs", {
                                    "languages": ["javascript", "css", "markup", "bash", "json"],
                                    "plugins": ["line-numbers"],
                                    "theme": "okaidia",
                                    "css": true
                                }
                            ]
                        ]
                    }
                </code></pre>
            </div>
        </section>
        {# /Using Babel #}

    </div>
</div>